apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  labels:
    app: consumer
    app.kubernetes.io/managed-by: "Helm"
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
      - name: consumer
        image: "{{ .Values.consumerImage.repository }}:{{ .Values.consumerImage.tag }}"
        imagePullPolicy: {{ .Values.consumerImage.pullPolicy }}
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "{{ .Values.env.KAFKA_BROKER }}"
        - name: KAFKA_GROUP_ID
          value: "{{ .Values.env.KAFKA_GROUP_ID }}"
        - name: KAFKA_TOPIC
          value: "{{ .Values.env.KAFKA_TOPIC }}"
        - name: KAFKA_RETRY_TOPIC
          value: "{{ .Values.env.KAFKA_RETRY_TOPIC }}"
        - name: KAFKA_DLQ_TOPIC
          value: "{{ .Values.env.KAFKA_DLQ_TOPIC }}"
        - name: KAFKA_RETRY_BACKOFF_MS
          value: "{{ .Values.env.KAFKA_RETRY_BACKOFF_MS }}"
        - name: KAFKA_MAX_RETRIES
          value: "{{ .Values.env.KAFKA_MAX_RETRIES }}"
        resources:
          limits:
            cpu: "{{ .Values.resources.limits.cpu }}"
            memory: "{{ .Values.resources.limits.memory }}"
          requests:
            cpu: "{{ .Values.resources.requests.cpu }}"
            memory: "{{ .Values.resources.requests.memory }}"